{
      "name": "mudlet package repository listing",
  "packages": [
                {
                       "author": "Vadi",
                      "created": "2025-01-26T21:21:25+07:00",
                  "description": "Import xml, and you can do __#number thing__.\n\nFor example, _#5 hi_ will send hi five times.",
                     "filename": "#-repeat-alias.mpackage",
                         "icon": "packages/icons/%23-repeat-alias.jpg",
                     "mpackage": "#-repeat-alias",
                        "title": "# repeat alias",
                     "uploaded": 1737944735,
                      "version": "1"
                },
                {
                       "author": "Erikka, Demonnic",
                      "created": "2024-03-15T02:21:34+0000",
                  "description": "# Achaea Chat Tabs\n\nSet of chat tabs similarly laid out to KaiUI, but using demonnic's latest version of EMCO which provides for automatic logging among other things, and not part of an all or nothing UI.\n\nBy default, the logs are kept in `getMudletHomeDir() .. \"/log/Chatbox/YYYY/MM/DD/tabname.html\"`\n\nWill start on the right side, attached to the right border. Resize, move, adjust how you see fit.\n\n## Configuration Alias\n* `act|act usage`\n  * prints a list of aliases and their usage in the main window\n* `act hide`\n  * hides the chat tabs\n* `act show`\n  * shows the chat tabs again.\n* `act save`\n  * saves the configuration\n* `act load`\n  * loads the configuration\n* `act font <new font name>`\n  * Sets the font for the chat consoles. Will not allow you to set one which does not exist.\n* `act fontSize <new font size>`\n  * Sets the font size for the chat consoles\n* `act blink <true|false>`\n  * set whether it should blink\n* `act timestamp <true|false>`\n  * set whether it should add a timestamp at the front\n* `act commandLine <true|false>`\n  * set whether it should show command lines\n* `act blankLine`\n  * set whether it should automatically add a newline to things echoed.\n* `act gaglist`\n  * lists the mobs and lines being gagged in the chat tabs.\n* `act gagmob <Lua pattern>`\n  * add a Lua pattern to check speakers against. See [this tutorial from lua-users.org](http://lua-users.org/wiki/PatternsTutorial) for more information. If the speaker matches the pattern, anything they say or emote on any channel will be gagged from the tabbed chat consoles. Does not affect the main window. Uses gmcp.Comm.Channel.Text.talker to make the determination.\n    * `act gagmob Vellis`\n      * gags any mob with \"Vellis\" in the speaker name in gmcp.\n    * `act gagmob a sick .+ child`\n      * gags `a sick human child` and `a sick tsol child` and `a sick mhun child` etc\n* `act ungagmob <Lua pattern>`\n  * Removes a lua pattern from the gagged mobs list.\n* `act gag <Lua pattern>`\n  * add a Lua pattern to check lines against. See [this tutorial from lua-users.org](http://lua-users.org/wiki/PatternsTutorial) for more information. If the content of the line matches any of the patterns then the line will be gagged from the tabbed chat consoles. Does not affect the main window.\n    * `act gag .- shouts \"I love cheese!\"`\n      * will gag anyone shouting \"I love cheese!\"\n* `act ungag <Lua pattern>`\n  * removes a lua pattern from the gagged lines list.\n* `act notify <tab name>`\n  * will send OS notifications when somethings is written to the tab specified. If a tab is not provided, will give a list of tabs that currently have notify enabled.\n    * `act notify guild`\n      * sends OS notifications whenever something comes in on the Guild tab\n* `act unnotify <tab name>`\n  * Stop sending OS notifications for a tab\n   * `act unnotify house`\n    * stop sending OS notifications when something comes in on the House tab\n* `act color <option> <color>`\n  * customize the colors of the chat window\n   * `act color usage`\n    * prints the color alias usage information\n* `act update`\n  * updates the package to the latest version\n* `act reset|act reset color`\n  * resets the chat window to defaults/resets chat colors only (remember to 'act save' after to save the defaults into the config file)\n\n## Power Users\nEMCO is a highly customizable chat script with a plethora of options to make it better/smarter/good looking that are by no means limited by only these aliases! If you want to further customize your chat box and its behavior refer to the [EMCO API](https://demonnic.github.io/mdk/current/classes/EMCO.html).\n",
                     "filename": "AchaeaChatTabs.mpackage",
                     "mpackage": "AchaeaChatTabs",
                        "title": "Chat tabs for Achaea",
                     "uploaded": 1725842089,
                      "version": "1.3.3"
                },
                {
                       "author": "tjurczyk, Delwing",
                      "created": "2025-01-24T15:25:45+01:00",
                  "description": "Arkadia script set installer.\n\nFor reference go to: https://github.com/tjurczyk/arkadia\n\nArkadia MUD: https://arkadia.rpg.pl/",
                     "filename": "ArkadiaInstaller.mpackage",
                     "mpackage": "ArkadiaInstaller",
                        "title": "Arkadia Scripts",
                     "uploaded": 1737729245,
                      "version": "1.0.0"
                },
                {
                       "author": "Demonnic",
                      "created": "2021-10-24T17:11:56+0000",
                  "description": "# Walk Visualizer\n\nThis package allows you to highlight rooms based on how many times you've revisited them during your current autowalk or manual exploration.\n\nOnly been there once? It's highlighted a cool, calming green.\n\nBeen there 5 times? RED ALERT!\n\nPrimarily designed to watch the dots fill in while doing an auto walk, but also to see where it is least efficient, hence the colors getting redder the more you visit.\n\n## Requirements\n\nIt uses the `gmcp.Room.Info` event to determine it's entered a room, and the value of `gmcp.Room.Info.num` to determine which room it was. So if your game doesn't have this, you're out of luck. Should work with all IREs and any game which models its gmcp after the IRE ones.\n\n## Aliases\n\n* `awv start`\n  * starts the visualizer, clearing any previously highlighted rooms it is tracking\n* `awv stop`\n  * stops adding the highlights but does not clear them out, so you can look over them and run the report\n* `awv clear`\n  * stops the visualizer and clears all the highlights.\n* `awv report`\n  * prints a report on number of rooms visited, number of moves to do it, etc.\n\n## API\n\n* `autoWalkVis:start()`\n  * starts the visualizer, clearing any previously highlighted rooms it is tracking\n* `autoWalkVis:stop(clear?)`\n  * stops the visualizer. If argument is true, also clears all the highlights. Data is kept either way for reports.\n* `autoWalkVis:report()`\n  * prints out the stat report for this visualization session\n* `autoWalkVis:clearHighlights()`\n  * clears all the map highlights without clearing the data. Leaves the visualizer on/off state alone.\n* `autoWalkVis:resetGradientAndHighlights()`\n  * This looks over the data and resets the max level of the gradient from 5 to whatever the most times a room was visited was. Then it goes through and adjusts the highlights on all tracked rooms to use the new gradient. Useful if you have a walk which simply must revisit some rooms more than 5 times and want to change the scale for better visualization.\n",
                     "filename": "AutoWalkVisualizer.mpackage",
                     "mpackage": "AutoWalkVisualizer",
                        "title": "Highlights rooms in more alarming colors the more times you revisit it.",
                     "uploaded": 1737769918,
                      "version": "1.0.0"
                },
                {
                       "author": "bscross32",
                      "created": "2024-01-29T15:47:53-0500",
                  "description": "# ChannelHistory\n\n## Virtual buffering system for screen reader users.\n\n## Installation instructions\nIn Mudlet, type the following command:\n```\nlua uninstallPackage(\"ChannelHistory\");installPackage(\"https://github.com/ironcross32/ChannelHistory/releases/latest/download/ChannelHistory.mpackage\")\n```\n## Usage\n\nfor those who are familiar with the channel_history plugin for MUSHclient, this package behaves in much the same way, though with a more limited feature set.\n* Alt+left/Alt+right - navigate between categories in the virtual buffer\n* Alt+up/Alt+down - navigate through the messages in the selected category\n* Alt+home/Alt+end - jump to the first and last message in the selected category\n* Alt+Shift+T - Toggles hearing relative time that a given message entered the buffer\n* Alt+Shift+delete - removes the selected category along with all of its messages\n\nHolding the alt key and tapping a number from 1 to 0 on the number row will retrieve a recent message. For example, Alt+1 would retrieve the most recent message, while Alt+5 would retrieve the fifth most, and Alt+0 would retrieve the tenth most recent message. While holding alt, double tapping a number will have its message copied to the clipboard.\n\nTo add a new message to any given buffer, simply call `channel_history.add(STR category_name, STR message)`. Here's an example of a regular expression trigger:\n\n`\\[(chat|advice|events)\\] (\\w+)(.+s)`\n\nAnd, how this information is parsed and passed along to `channel_history:add()`\n\n```\nlocal where = matches[2]\nlocal message = matches[3] .. \": \" .. matches[4]\nchannel_history.add(where, message)\n```\n\n## Credits\n\nAs much of this project is a port from channel_history.xml from MushZ, thanks goes out to its authors:\n* Tyler Spivey\n* Oriol Gomez\n* Weyoun\n\nThanks also goes to Demonnic for graciously offering assistance with questions related to Muddler, which is used to package this project, and for helping with debugging some initial code. And of course, to the Mudlet team as a hole for creating a fast, powerful, and feature-rich MUD client.\n",
                     "filename": "ChannelHistory.mpackage",
                     "mpackage": "ChannelHistory",
                        "title": "Virtual buffering system for screen reader users.",
                     "uploaded": 1736408583,
                      "version": "1.0.0"
                },
                {
                       "author": "gesslar",
                      "created": "2024-11-26T22:50:47+0000",
                  "description": "Enable clickable links in Mudlet! That's pretty nice, right?",
                     "filename": "Clicker.mpackage",
                         "icon": "packages/icons/Clicker.png",
                     "mpackage": "Clicker",
                        "title": "Make URLs clickable",
                     "uploaded": 1736696689,
                      "version": "1.8.0"
                },
                {
                       "author": "Andruid",
                      "created": "2025-01-19T11:15:14-06:00",
                  "description": "Highlight text with your mouse, then right-click to copy with color codes. Supports basic ANSI as well as XTERM color.\n\nThis script is specific to AE:Reboot but can serve as a basis to adapt your own using your game's unique color-coding format (some use 3-letter xterm codes, others use numbers, etc.).\n\nCredit: Adapted from LOTJ's awesome color-copy script <3",
                     "filename": "Color copy with mouse for AE Reboot.mpackage",
                         "icon": "packages/icons/Color copy with mouse for AE Reboot.png",
                     "mpackage": "Color copy with mouse for AE Reboot",
                        "title": "Copy text with color codes in AE Reboot format",
                     "uploaded": 1737314622,
                      "version": "1"
                },
                {
                       "author": "Demonnic",
                      "created": "2023-06-19T03:37:11+0000",
                  "description": "# EMCO\n\n## Prebuilt EMCO tabbed chat package\n\nWhile there are many uses for an EMCO, the most requested one is by far tabbed chat display. This package takes the EMCO object available as part of the [MDK](https://github.com/demonnic/MDK) and builds a basic, generic chat tabs package out of it.\n\nIt's built using an adjustable container, so it can be moved, resized, etc right out of the box. There are range of aliases with the package which make adding/removing tabs and changing some of the basic themes of the EMCO easier.\n\nYou can leverage the entire [EMCO API](https://demonnic.github.io/mdk/current/classes/EMCO.html) by targeting `demonnic.chat` , as that is the actual underlying EMCO object.\n\n## Installation\n\nYou can use the following command in Mudlet to install the latest version:\n\n`lua installPackage(\"https://github.com/demonnic/EMCO/releases/latest/download/EMCOChat.mpackage\")`\n\nOnce you have it installed you can update by using the `emco update` alias.\n\n## Usage\n\n### Copying lines into your EMCO\n\nIf you want to copy a line from the game and send it to EMCO, make a trigger to match the line, and use `demonnic.chat:append(\"tabName\")` to copy the line to the EMCO. For instance, to send a line to the \"Tells\" tab, you would use\n\n```lua\ndemonnic.chat:append(\"Tells\")\n```\n\nIf you want to send lines to the EMCO in code yourself, you can use `demonnic.chat:cecho(\"OOC\", \"This is an OOC message\\n\")`. There is also decho and hecho available the same way.\n\n### Available aliases for the prebuilt EMCO package\n\n* `emco addtab <tabname>`\n  * adds a tab to your EMCO\n* `emco blankLine <true|false>`\n  * turn inserting a blank line between messages on/off\n* `emco blink <true|false>`\n  * turn blinking on/off\n* `emco color <option> <value>`\n  * used to change the colors for the active/inactive tab, and the background color for the consoles. 'emco color' with no options will print out available options\n* `emco font`\n  * set the font to use for the consoles\n* `emco fontSize`\n  * set the font size for the consoles\n* `emco gag <pattern>`\n  * add a gag pattern\n* `emco gaglist`\n  * prints out the list of gag patterns\n* `emco hide`\n  * hide the EMCO\n* `emco load`\n  * loads your config from disk\n* `emco lock`\n  * locks the EMCO in place\n* `emco notify <tabName>`\n  * turn on OS notifications for tabName\n* `emco remtab <tabname>`\n  * removes a tab from your EMCO\n* `emco save`\n  * saves your config to disk\n* `emco show`\n  * show the EMCO\n* `emco timestamp <true|false>`\n  * turn timestamps on/off\n* `emco title <new title>`\n  * Set the title at the top of the EMCO Chat window. \"Tabbed Chat\" is the default starting title.\n* `emco unlock`\n  * Unlocks the EMCO window so you can move and resize it again\n* `emco ungag <pattern>`\n  * remove a gag pattern\n* `emco unnotify <tabName>`\n  * turn off OS notifications for tabName\n* `emco update`\n  * (re)install the latest version of the package\n",
                     "filename": "EMCOChat.mpackage",
                         "icon": "packages/icons/EMCOChat.png",
                     "mpackage": "EMCOChat",
                        "title": "Premade tabbed chat using EMCO",
                     "uploaded": 1737771182,
                      "version": "2.9.0"
                },
                {
                       "author": "Ping",
                      "created": "2025-01-20T01:22:01+08:00",
                  "description": "A simple trigger that captures words encapsulated in colons like :this: and turns them into unicode emojis. Uses discord naming conventions for the most part, should be easy to update on your own end. Work in progress!",
                     "filename": "Emojis.mpackage",
                         "icon": "packages/icons/Emojis.png",
                     "mpackage": "Emojis",
                        "title": "A trigger and script to convert text emojis into unicode emojis!",
                     "uploaded": 1737307523,
                      "version": "1.001"
                },
                {
                       "author": "Caelinus",
                      "created": "2025-01-24T08:04:39-08:00",
                  "description": "A simple and minimalistic UI for Erion.\n\nIntallation: Install Package as normal. Make sure to click the \"Click Here!!!\" Text upon entering game world in order to set a few important variables. UI will not fully initialize until character is loaded. You may need to close the profile once and sign back in after install if it is installed in an open game.\n\nNote: This UI package uses a custom prompt using Erion's custom prompt options in order to get the data it needs to work. Any changes to the prompt made by the user will cause the UI to stop working.",
                     "filename": "ErionUI 1.0.mpackage",
                     "mpackage": "ErionUI 1.0",
                        "title": "ErionMud UI Package.",
                     "uploaded": 1737741520,
                      "version": "1.0"
                },
                {
                       "author": "Sampa",
                      "created": "2025-01-27T15:45:55-05:00",
                  "description": "This script will help players calculate the Fae Orb combinations for the game Medievia.  Calculations include combinations for Double Experience, Remove Storm, Locate Serpent, and Create Rainstorm.\n\nUse the \"faecalc\" command in game to view the command list.",
                     "filename": "FaeCalc v1.00.mpackage",
                     "mpackage": "FaeCalc v1.00",
                        "title": "A script that calculates Fae Orb combinations for Medievia",
                     "uploaded": 1738042529,
                      "version": "1.00"
                },
                {
                       "author": "Akaya, mods by Zooka",
                      "created": "2024-12-24T13:05:23+04:00",
                  "description": "### Description\n\nThis package contains a basic GUI template that serves as a basis for creating your own.  It uses modern Geyser elements such as Adjustable Containers and Geyser Buttons for a flexible layout which can be arranged and styled anyway you like.  This is an updated, modern version of Akaya's excellent original template.\n\n### Usage\n\nSimply install this package and the GUI will be displayed.  Start customising!\n\n### See Also\n\n* [Akaya's original template](https://forums.mudlet.org/viewtopic.php?f=6&t=4098&pk_vid=09b619c5f5c4537b1735030856a9723a)",
                     "filename": "GUIFlex.mpackage",
                     "mpackage": "GUIFlex",
                        "title": "A basic but modern GUI template created with Geyser.",
                     "uploaded": 1735031443,
                      "version": "1"
                },
                {
                       "author": "Elanthia Online",
                      "created": "2025-01-29T23:09:22-06:00",
                  "description": "### Description\n\n\nThe **Lich AutoConnect** package simplifies the process of connecting Mudlet to Simutronics games such as Gemstone IV and DragonRealms via the Lich 5 proxy. This package is specifically designed to provide seamless integration by automatically establishing a connection using session data generated by Lich.\n\n\n#### General Features:\n- Automatically connects Mudlet to a Simutronics game server using the Lich session file.\n- Simplifies setup by reading host and port information directly from the Lich session data.\n- Uses Mudlet's built-in `yajl` library for JSON parsing.\n- Supports all major operating systems: Windows, macOS, and Linux.\n- Ensures secure communication by not storing sensitive information like login keys.\n- Compatible with profiles named after character names for better clarity and organization.\n\n\n#### Simutronics-Specific Features:\n- Tailored for games like **Gemstone IV** and **DragonRealms**, providing a reliable method to use Lich as an intermediary for enhanced scripting and gameplay customization.\n- Requires profiles to be named after the character (e.g., `Nisugi`) for correct session file identification. Alternatively, the character name can be manually configured in the script.\n\n\n#### Requirements:\n- **Lich 5**: Ensure you have the latest version installed and configured as a connection server. ([Lich 5 Repository](https://github.com/elanthia-online/lich-5))\n- **Mudlet**: Version supporting `yajl` for JSON parsing is required.\n\n\n#### Installation:\n1. Download and install the package using Mudlet's package manager.\n2. Configure your Mudlet profile to match your character's name (e.g., `Nisugi`).\n3. Open lich.rbw to access the Login Manager.\n4. Under Manual Entry, enter a custom launch command of  mudlet --profile=Name\n5. Enter Mudlet's working directory. IE: C:\\Users\\rual\\AppData\\Local\\Mudlet\n6. Enter your login credentials, select your character and hit Play.\n\n\n#### Notes:\n- The package assumes the default directory for Lich session files:\n  - **Windows**: `%TEMP%/simutronics/sessions/`\n  - **macOS/Linux**: `/tmp/simutronics/sessions/`\n- If you encounter issues, ensure that the character name in your profile matches the one in the Lich session file.\n\n\n#### See Also:\n- [Lich 5 Documentation](https://github.com/elanthia-online/lich-5/blob/staging/README.adoc)\n- Mudlet [Package Documentation](https://wiki.mudlet.org/w/Packages)",
                     "filename": "LichConnect.mpackage",
                         "icon": "packages/icons/LichConnect.ico",
                     "mpackage": "LichConnect",
                        "title": "Play Simutronics Games!",
                     "uploaded": 1738218915,
                      "version": "1.3"
                },
                {
                       "author": "Demonnic",
                      "created": "2022-06-29T05:25:32+0000",
                  "description": "# Lusternia Chat Tabs\n\nSet of chat tabs similarly laid out to KaiUI, but using my latest version of EMCO which provides for automatic logging among other things, and not part of an all or nothing UI.\n\nBy default, the logs are kept in `getMudletHomeDir() .. \"/log/Chatbox/YYYY/MM/DD/tabname.html\"`\n\nWill start on the right side, attached to the right border. Resize, move, adjust how you see fit.\n\n## Configuration Alias\n\n* `lct hide`\n  * hides the chat tabs\n* `lct show`\n  * shows the chat tabs again.\n* `lct save`\n  * saves the configuration\n* `lct load`\n  * loads the configuration\n* `lct font <new font name>`\n  * Sets the font for the chat consoles. Will not allow you to set one which does not exist.\n* `lct fontSize <new font size>`\n  * Sets the font size for the chat consoles\n* `lct blink <true|false>`\n  * set whether it should blink\n* `lct timestamp <true|false>`\n  * set whether it should add a timestamp at the front\n* `lct blankLine`\n  * set whether it should automatically add a newline to things echoed.\n* `lct gaglist`\n  * lists the mobs and lines being gagged in the chat tabs.\n* `lct gagmob <Lua pattern>`\n  * add a Lua pattern to check speakers against. See [this tutorial from lua-users.org](http://lua-users.org/wiki/PatternsTutorial) for more information. If the speaker matches the pattern, anything they say or emote on any channel will be gagged from the tabbed chat consoles. Does not affect the main window. Uses gmcp.Comm.Channel.Text.talker to make the determination.\n    * `lct gagmob Abeytu`\n      * gags any mob with \"Abeytu\" in the speaker name in gmcp.\n    * `lct gagmob a sick .+ child`\n      * gags `a sick human child` and `a sick merian child` and `a sick kepheran child` etc\n* `lct ungagmob <Lua pattern>`\n  * Removes a lua pattern from the gagged mobs list.\n* `lct gag <Lua pattern>`\n  * add a Lua pattern to check lines against. See [this tutorial from lua-users.org](http://lua-users.org/wiki/PatternsTutorial) for more information. If the content of the line matches any of the patterns then the line will be gagged from the tabbed chat consoles. Does not affect the main window.\n    * `lct gag .- shouts \"I love cheese!\"`\n      * will gag anyone shouting \"I love cheese!\"\n* `lct ungag <Lua pattern>`\n  * removes a lua pattern from the gagged lines list.\n* `lct notify <tab name>`\n  * will send OS notifications when somethings is written to the tab specified\n    * `lct notify guild`\n      * sends OS notifications whenever something comes in on the Guild tab\n* `lct unnotify <tab name>`\n  * Stop sending OS notifications for a tab\n   * `lct unnotify guild`\n    * stop sending OS notifications when something comes in on the Guild tab",
                     "filename": "LusterniaChatTabs.mpackage",
                     "mpackage": "LusterniaChatTabs",
                        "title": "Chat tabs for Lusternia",
                     "uploaded": 1737770191,
                      "version": "2.1.0"
                },
                {
                       "author": "Demonnic",
                      "created": "2023-05-29T22:41:25+0000",
                  "description": "# the demonnic MDK and You\n\nThis is a collection of Lua 'classes' and modules I wrote for Mudlet. It is largely targeted at scripters, and comes packaged in two ways depending on how you intend to use/distribute your work. Please see [Installation](#installation) for more details\n\n## Documentation\n\nThe [MDK wiki](https://github.com/demonnic/MDK/wiki) contains an entry for each module or class, as well as examples.\n\nStarting with alpha2 of the MDK, the ldocs generated from code are included in the zipped releases. The current release's ldocs can always be viewed at <https://demonnic.github.io/mdk/current/>\n\n## Installation\n\nHow you 'install' the MDK depends on how you intend to use it.\n\n### I just want to install the MDK for my own personal use\n\nYou just want to get your hands on the goods, and aren't looking to use any MDK items in an exported package for sharing or anything like that.\nWell, you are who the mdk mpackage is for! Download the MDK.mpackage from your desired release on the [Releases](https://github.com/demonnic/MDK/releases) page and install it in the package manager. The examples in the [wiki](https://demonnic.github.io/mdk/current/) are written with this in mind, and you would require the items you need as `local EMCO = require(\"MDK.emco\")`\n\n### I am a package author looking to include/use one of the MDK modules or classes in my package\n\nYou should download the `demonnic-MDK-<version>.zip` file for your desired release on the [Releases](https://github.com/demonnic/MDK/releases) page.\nInside are the individual .lua files for the modules and classes described in the [wiki](https://demonnic.github.io/mdk/current/) and [API docs](https://demonnic.github.io/mdk/current/).\nYou can include all of them if you wish, or only the ones you actually make use of. I ask that you include the LICENSE.lua or LICENSE-MDK.lua file (depending on the release) file in addition.\nThey should go in the root of your package, so that when your package is installed the files can be found at `getMudletHomeDir() .. \"/<packagename>/emco.lua\"`. You would then use `local EMCO = require(\"<mypackagename>.emco\")`\nSo for example if your package name is \"MySuperCoolPackage\" and it installs to `getMudletHomeDir() .. \"/MySuperCoolPackage/\"` then you use `local EMCO = require(\"MySuperCoolPackage.emco\")` and the emco.lua file should be at `getMudletHomeDir() .. \"/MySuperCoolPackage/emco.lua\"`\n\n## Files (Modules/Classes)\n\nThese files contain the modules in the MDK. You only need to include those files which you intend to use, except as noted in the descriptions below.\nIf you include any of the modules from the MDK, you should also include LICENSE.lua or LICENSE-MDK.lua. It contains the licenses for my modules and for luaunit and lua-schema which are not my original works.\nYou should maybe also include demontools.lua, as it notes below several other of the MDK modules make use of items within it.\n\n* aliasmgr.ua\n  * Object to manage tempAliases programmatically. <https://github.com/demonnic/MDK/wiki/AliasMgr>\n  \n* chyron.lua\n  * Label which moves a message across its face from right to left, like a stock ticker or the news chyrons. Documentation at <https://github.com/demonnic/MDK/wiki/Chyron>\n\n* demontools.lua\n  * Collection of miscellaneous useful functions. You should include this file if you use the MDK, as several other modules make use of it. Include functions for converting c/d/hecho, html, and ansi colored strings between each other, mkdir_p, and some others. <https://github.com/demonnic/MDK/wiki/DemonTools>\n\n* emco.lua\n  * EMCO. Documentation at <https://github.com/demonnic/MDK/wiki/EMCO> Will make use of LoggingConsole if loggingconsole.lua and demontools.lua are included\n\n* figlet.lua\n  * Creates FIGlets from strings\n  * Reference package with multiple fonts and color gradients at <https://github.com/demonnic/figinator>\n\n* ftext.lua\n  * basic fText. Documentation at <https://github.com/demonnic/MDK/wiki/fText>\n  * now includes TextFormatter and TableMaker as ftext.TextFormatter and ftext.TableMaker\n\n* gradientmaker.lua\n  * Functions for creating color gradients for use with c/d/hecho. Documentation at <https://github.com/demonnic/MDK/wiki/GradientMaker>\n\n* loggingconsole.lua\n  * Self logging extension to the mini console. Works just like a Geyser.MiniConsole but adds a templated path and fileName constraint, as well as logFormat so it can log what is echod or appended to it. Requires demontools.lua in order to work.\n\n* loginator.lua\n  * Creates objects for logging messages to disk. <https://github.com/demonnic/MDK/wiki/Loginator>\n\n* mastermindsolver.lua\n  * A class which will help you solve Master Mind puzzles. <https://github.com/demonnic/MDK/wiki/MasterMindSolver>\n\n* revisionator.lua\n  * A class which aims to make upgrading between package versions easier by storing and running patch functions. <https://github.com/demonnic/MDK/wiki/Revisionator>\n\n* sortbox.lua\n  * SortBox, an alternative to H/VBox which can be either, and also provides options for sorting its contents. Overview at <https://github.com/demonnic/MDK/wiki/SortBox>\n\n* spinbox.lua\n  * SpinBox, a Geyser element for adjusting numbers with your mouse. Overview at <https://github.com/demonnic/MDK/wiki/SpinBox>\n\n* sug.lua\n  * Self Updating Gauges, will watch a set of variables and update itself on a timer based on what values those variables hold. Documentation at <https://github.com/demonnic/MDK/wiki/SelfUpdatingGauge>\n\n* textgauge.lua\n  * TextGauges, what it says on the tin. Documentation at <https://github.com/demonnic/MDK/wiki/TextGauge>\n\n* timergauge.lua\n  * TimerGauge, an extension of Geyser.Gauge which serves as an animated countdown timer. Overview at <https://github.com/demonnic/MDK/wiki/TimerGauge>\n\n## Others people's work I depend upon\n\n* schema.lua\n  * lua-schema, for defining table schema. Documentation at <https://github.com/sschoener/lua-schema>\n  * will be used by Archon for ensuring configuration tables are as they should be.\n\n* LICENSE.lua\n  * Contains the license information for MDK, as well as lua-schema and luaunit which have been included.\n",
                     "filename": "MDK.mpackage",
                         "icon": "packages/icons/MDK.png",
                     "mpackage": "MDK",
                        "title": "Collection of useful objects/classes",
                     "uploaded": 1737770335,
                      "version": "2.10.0"
                },
                {
                       "author": "Kymbahl, Kronos",
                      "created": "2024-11-09T13:51:15+0000",
                  "description": "# MedUI - A User Interface for Medievia\n\n### Authors: Kymbahl and Kronos\n\n### Features\nMedUI is a package for the Medievia MUD which provides a more modern user experience.\nIncluded in this package is:\n1. External Map window   - This captures the in-game ASCII map and places it in its own window.\n2. Communications Window - This captures common game channels and places them in another window.\n3. Player Vitals Gauges  - Health/Mana/Breath/Movement bars that update from your prompt data.\n4. Buff Bar              - A visual indication of which buffs your player is affected by.\n5. Custom Medievia Font  - A special TrueType font designed for rendering the in-game ASCII map.\n\n### Configuration\nMost configuration options may be toggled using the 'medui' alias menu, such as:\n1. Toggle on/off the gauges display\n2. Toggle timestamps in the chat window\n3. Toggle showing the inline map (in your main display)",
                     "filename": "MedUI.mpackage",
                     "mpackage": "MedUI",
                        "title": "User Interface for Medievia",
                     "uploaded": 1731160325,
                      "version": "1.7.8"
                },
                {
                       "author": "Demonnic",
                      "created": "2024-04-14T13:54:22-0400",
                  "description": "A helper package for reloading packages created by muddler automatically",
                     "filename": "Muddler.mpackage",
                     "mpackage": "Muddler",
                        "title": "muddler helper package",
                     "uploaded": 1737769891,
                      "version": "1.0.2"
                },
                {
                       "author": "Demonnic",
                      "created": "2022-05-19T00:28:05+0000",
                  "description": "# Busted, packaged for Windows Mudlet\n\nBusted is a robust testing framework for Lua with a lot of functionality, but it has some compiled C components and is not trivial for Windows users to install for use with their Mudlet systems. Since we use busted for testing Mudlet itself I thought it would be good to get a version repackaged which Mudlet users could install for their own use.\n## Usage\n\nThis comes with one alias, `runTests`. By default, it will look for every file in your profile directory named `*_spec.lua` and run the tests defined within. If you wish to only run tests for a specific package, you can use the package name as the argument to the alias, for instance `runTests REPLet` will run any test files in the REPLet package if installed. If you want to run a specific test file, you can use `runTests REPLet/coreTests_spec.lua` to point to the specific file.\n\n## Writing tests\n\nThere are some very good [docs](https://olivinelabs.com/busted/) available from the authors. For some practical examples, you can check out the [Mudlet busted tests](https://github.com/Mudlet/Mudlet/tree/development/src/mudlet-lua/tests)\n\n## TO-DO\n\nI have not yet included the libraries to enable asynchronous testing (libev and the copas and lua-libev luarocks) so you won't be able to ",
                     "filename": "MudletBusted.mpackage",
                         "icon": "packages/icons/MudletBusted.png",
                     "mpackage": "MudletBusted",
                        "title": "The Busted testing suite, packaged for Mudlet",
                     "uploaded": 1724911580,
                      "version": "2.0.0"
                },
                {
                       "author": "Demonnic",
                      "created": "2021-09-01T16:55:46+0000",
                  "description": "# MudletWTTR\n\nThis is a fun and silly package I threw together for displaying weather reports in a Mudlet miniconsole.\nIt uses https://wttr.in to get the reports and then just runs it through ansi2decho to push to the miniconsole.\n\n## Commands\n\nThis is a pretty simple thing. You can check the `wttr` alias to get a list of aliases it recognizes.\n",
                     "filename": "MudletWTTR.mpackage",
                     "mpackage": "MudletWTTR",
                        "title": "Get the weather from https://wttr.in in a miniconsole",
                     "uploaded": 1737769839,
                      "version": "1.0.0"
                },
                {
                       "author": "Sampa",
                      "created": "2025-01-27T15:07:38-05:00",
                  "description": "This is a basic Multiplaying script for the game Medievia. It contains a Form Stat Console window to make form stats and status visible across all profiles, as well the functionality to allow the control of multiple profiles via a set of simple commands.\n\nNote: This version of MultiBot does NOT contain any combat automation.",
                     "filename": "MultiBot Core v1.02.mpackage",
                     "mpackage": "MultiBot Core v1.02",
                        "title": "A basic Multiplaying script for Medievia",
                     "uploaded": 1738042408,
                      "version": "1.02"
                },
                {
                       "author": "Khazdul",
                      "created": "2025-01-31T18:39:31+01:00",
                  "description": "### Description\nMumeSpellTimers keeps tracks of most types of spells, buffs, maluses, charmed mobs, blinds, sancs and stored spells and displays it in an interactive window that can be toggled on or off.\n\n![Image]($packagePath/.mudlet/description_images/Screenshot.png)\n\n### Usage\n```\nCommands:\n  spells              -- toggles the window on/off\n  bli                 -- built in alias to cast blind\n```\n### Misc.\nTo keep track of which number (x. target) that has been blinded either use the built in \"bli target\" alias. Alternatively to integrate the functionality in your own settings you have to call the following function right before you cast blind (substitute target with your own target variable): \nMumeSpellTimers.attemptBlind(target)",
                     "filename": "MumeSpellTimers.mpackage",
                     "mpackage": "MumeSpellTimers",
                        "title": "MumeSpellTimers - Tracking of spells, buffs, maluse and more (for MUME - Multi Users in Middle Earth)",
                     "uploaded": 1738345570,
                      "version": "1.0.8"
                },
                {
                       "author": "Oneymus",
                      "created": "2024-06-28T14:07:07+04:00",
                  "description": "N, S, E, W, NW, NE, SW, SE, IN, OUT, UP, DOWN\nassigned to the number pad.",
                     "filename": "NumPad.mpackage",
                         "icon": "packages/icons/NumPad.png",
                     "mpackage": "NumPad",
                        "title": "Cardinal movement commands assigned to number pad keys.",
                     "uploaded": 1724911580,
                      "version": "1"
                },
                {
                       "author": "Kymbahl",
                      "created": "2025-01-24T14:22:29+0000",
                  "description": "# ProfileWindow - A floating console to interact with your other profiles\n\n### Author: Humera\n\n### Information\nProfileWindow allows you to view and interact with your other profiles without needing to use MultiView.\nTo use, install ProfileWindow on all of your profiles that you wish to see, as well as your main profile.\nThen simply type `pwadd <profileName>` to open a floating window showing the output of that profile!\n\nExample:\nI have 2 profiles, Humera and Kryomeris. I wish Humera to be my primary profile.\nI install ProfileWindow for both profiles, then in the Humera profile I type `pwadd Kryomeris`.\n\nWhen used in conjunction with the convertToUserWindow package, these windows can be popped out from\nyour Mudlet window to be dragged anywhere you wish.\n\n### Commands (Aliases)\n`pwadd <profileName>`    - Opens a new ProfileWindow to view \n\n### Known Issues\nWhen closing a ProfileWindow, if the command line in that window has focus then clicking in the area\npreviously occupied by your floating window will show just the MiniConsole with no way to close it\nagain without a `resetProfile()`",
                     "filename": "ProfileWindow.mpackage",
                     "mpackage": "ProfileWindow",
                        "title": "Profile Window",
                     "uploaded": 1737729827,
                      "version": "1.0.0"
                },
                {
                       "author": "demonnic",
                      "created": "2023-12-20T16:00:41+0000",
                  "description": "# progressDisplayinator\n\n## Displays xp and gold per hour for Aetolia.\n\nProlly works with other IREs too\n\n![image](https://github.com/demonnic/ProgressDisplayinator/assets/3660/3aed41fa-07eb-4cc3-a60b-fb9ba6a9ed11)\n\n\n## Installation\n\n`lua uninstallPackage(\"ProgressDisplayinator\") installPackage(\"https://github.com/demonnic/ProgressDisplayinator/releases/latest/download/ProgressDisplayinator.mpackage\")`\n\n## Usage\n\nBrief introduction to the overall usage. Then break it down to specifics\n\n### Aliases\n\n* `show progress`\n  * pops open the display\n* `reset progress`\n  * Empties the logs and resets the start time.\n",
                     "filename": "ProgressDisplayinator.mpackage",
                         "icon": "packages/icons/ProgressDisplayinator.png",
                     "mpackage": "ProgressDisplayinator",
                        "title": "Displays xp and gold per hour for Aetolia. Prolly works with other IREs too",
                     "uploaded": 1737769791,
                      "version": "1.0.0"
                },
                {
                       "author": "bscross32",
                      "created": "2024-01-29T20:17:09-0500",
                  "description": "# QuickOutput\n\n## Quick retrieval of recent output history for screen reader users.\n\nAllows reading of the 10 most recent lines of output by mapping them directly to keyboard keys.\n\n## Installation\n\nRun the following command in Mudlet:\n```\nlua uninstallPackage(\"QuickOutput\");installPackage(\"https://github.com/ironcross32/QuickOutput-for-Mudlet/releases/latest/download/QuickOutput.mpackage\")\n```\n\n## Usage\n\nHold the control key down, then tap a number from 1 to 0 on the number row. 1 is the most recent line, while 0 is the tenth most recent. Double-tapping the number of the line will cause its contents to be copied to your clipboard.\n\n### Note\nsince this package binds keys to CTRL+&lt;number&gt;, it overrides Mudlet's default behavior of jumping to a particular tab. As this package is designed to run along side [ChannelHistory](https://github.com/ironcross32/ChannelHistory), which uses Alt+&lt;number&gt; for its most recent history per category, these keybindings cannot change. Thus, for those wishing to use these two packages in tandem, while preserving the ability to jump between multiple profiles, it will be necessary to change the following option within the, \"Special Options\" tab in preferences:\n* Switch between input line and main window using:\nF6 is recommended for users who wish to retain their ability to use tab auto-completion, however, tab may be a good choice for those who do not use it.\n",
                     "filename": "QuickOutput.mpackage",
                     "mpackage": "QuickOutput",
                        "title": "Quick retrieval of recent output history for screen reader users.",
                     "uploaded": 1738159789,
                      "version": "1.0.0"
                },
                {
                       "author": "Demonnic",
                      "created": "2022-06-28T18:42:27+0000",
                  "description": "# REPLet - the Mudlet Lua REPL\n\nThis package replicates the functionality of the `lua` alias inside its own UserWindow\nIt comes with a single alias, `replet`, which opens the REPLet console. From there, you can execute arbitrary lua code and see the results in the console.\n\nOnce you have the console open, you can type `usage` within the console for the extra commands which REPLet comes with, in addition to executing code.\n\nBy default, adds `recho(msg)`, `rcecho(msg)` etc to allow for easy c/d/h/echoing directly to the console. Also adds rdisplay, which works like display() but prints to the REPLet console. If this covers over functions you already have and want to use in the console, use `addEchos false` in the REPLet console's command line.\n\n## Why REPLet?\n\nREPL is an acronym which stands for `Read Execute Print Loop` and is the term for interactive code runners like this. So I squashed it together with Mudlet to make REPLet.\n",
                     "filename": "REPLet.mpackage",
                         "icon": "packages/icons/REPLet.png",
                     "mpackage": "REPLet",
                        "title": "Lua REPL in a UserWindow or Adjustable.Container",
                     "uploaded": 1737769756,
                      "version": "1.1.1"
                },
                {
                       "author": "Demonnic",
                      "created": "2021-06-03T21:29:09+0000",
                  "description": "# The RecogINATOR\n\nThis is honestly just a simple tool to help you manage a 'RECOGNISE' list for Lusternia.\nAs you're limited to only recognizing up to three people per r/l day, sometimes you need to be able to remember to recognize someone tomorrow when you get a slot back\n\nEnter the recogINATOR! which allows you to maintain a queue of people who need recognition\n\n## Usage\n\n`recog` shows your queue. It is clickable on the titlebar and numbers.\n\n`recog add <person> <reason>` to add someone to the queue.\n\nCheck out the alias `recog help` for full info on alias interaction.\n",
                     "filename": "Recoginator.mpackage",
                         "icon": "packages/icons/Recoginator.png",
                     "mpackage": "Recoginator",
                        "title": "The recognition maker",
                     "uploaded": 1737769774,
                      "version": "1.0.0"
                },
                {
                       "author": "Khazdul",
                      "created": "2025-01-28T20:15:02+01:00",
                  "description": "### Description\n\nAdds the ability to input komplex routes in a single line of text. For example \"3e2sw\" will make you first walk 3 rooms east, 2 rooms south and 1 room west. The following will yield identical result: \"eeessw\"\n\n### Commands\n\n`speedwalk`  -- Toggles speedwalk on or off.",
                     "filename": "SpeedWalk.mpackage",
                     "mpackage": "SpeedWalk",
                        "title": "Type in long routes in a single line",
                     "uploaded": 1738117496,
                      "version": "1.0.0"
                },
                {
                       "author": "Demonnic",
                      "created": "2022-08-09T23:52:35+0000",
                  "description": "# Stressinator\n\nEver want to torture your Mudlet profile and see how it holds up under pressure?\n\nIf like me you answered \"Ohh, neat!\" then I threw this together after reading through the forum topic [Typical Trigger Performace](https://forums.mudlet.org/viewtopic.php?f=9&t=23089)\n\n## Installation\n\nYou can use the following command in Mudlet to install the latest version:\n\n`lua uninstallPackage(\"Stressinator\") installPackage(\"https://github.com/demonnic/Stressinator/releases/latest/download/Stressinator.mpackage\")`\n\nAfter that, you can either use the same snippet, or the supplied `stressinator update` alias\n\n## Usage\n\n* `stresstest <number of lines to run>`\n  * Run the stress test with optional number of times to process the line. Defaults to 10k if no number provided.\n* `waitno`\n  * Cancels the stresstest if you tried to start one\n* `stressinator update`\n  * Downloads and installs the latest version of the Stressinator\n",
                     "filename": "Stressinator.mpackage",
                     "mpackage": "Stressinator",
                        "title": "Simple test for trigger check speeds",
                     "uploaded": 1737769821,
                      "version": "2.0.1"
                },
                {
                       "author": "Zooka",
                      "created": "2024-08-04T14:41:00+03:00",
                  "description": "### Description\n\nSearch for matching function names and open the Mudlet API from the command line.\n\n### Usage\n\nIf this package uses aliases, show a few examples and expected output.\n\n`> !api`\n\nsimply open the API webpage\n\n`> !api gotoRoom`\n\nopen the API at the function description of gotoRoom\n\n`> !api trigger`\n\n    No matching functions found.  Possible match:\n    cfeedTriggers\n    dfeedTriggers\n    disableTrigger\n    ...\n    ...",
                     "filename": "command-line-api.mpackage",
                         "icon": "packages/icons/command-line-api.png",
                     "mpackage": "command-line-api",
                        "title": "Search and open Mudlet API webpage from the command line",
                     "uploaded": 1724911580,
                      "version": "1"
                },
                {
                       "author": "Edru2",
                      "created": "2025-01-20T23:02:49+01:00",
                  "description": "**Convert Adjustable.Container to UserWindow and back (by simply double clicking)**\n\n### Description\n\nThis Mudlet package by **Edru** enables you to toggle any Adjustable.Container into a UserWindow, and vice versa, with just a couple of clicks. Once installed, the package is active immediately. Just double-click on an Adjustable.Container to convert it into a UserWindow. To convert it back, open the UserWindow, double-click on the contained adjustable box, and then choose the position to place it back in your main interface.\n\n### Usage\n\nDrag and drop the package onto Mudlet to use it right away—no configuration needed. Perform the following actions to switch between Adjustable.Container and UserWindow:\n\n1. **Convert to UserWindow**: Double-click the Adjustable.Container.\n2. **Convert back to Adjustable.Container**: Open the UserWindow, double-click the contained adjustable box, and choose the position.\n",
                     "filename": "convertToUserWindow.mpackage",
                     "mpackage": "convertToUserWindow",
                        "title": "Seamlessly Toggle Between Adjustable.Container and UserWindow with Double-Click",
                     "uploaded": 1737429352,
                      "version": "1"
                },
                {
                       "author": "Demonnic",
                      "created": "2024-12-28T04:18:51+0000",
                  "description": "# copyToAda\n\n## Send the selected text as HTML to https://ada-young.com/pastebin/\nThis literally just adds a right-click menu option to send the selected text to ada-young as an html pastebin\n\n## Installation\n\nCopy and paste the following\n\n`lua installPackage(\"https://github.com/demonnic/copyToAda/releases/latest/download/copyToAda.mpackage\")`\n",
                     "filename": "copyToAda.mpackage",
                     "mpackage": "copyToAda",
                        "title": "Copy selected text as HTML to https://ada-young.com/pastebin/ using https://ada-young.com/pastebin/api/v1/about ",
                     "uploaded": 1737769687,
                      "version": "1.0.0"
                },
                {
                       "author": "Demonnic",
                      "created": "2022-11-18T03:54:55+0000",
                  "description": "# copyWithoutNewlines\n\n## Copy text from the main console without line breaks\n\nThis literally just adds a right-click menu option to the main and miniconsoles which allows you to copy text without the line breaks in it. Helpful for copying things after Mudlet has word wrapped them.\n\n## Installation\n\nCopy and paste the following\n\n`lua installPackage(\"https://github.com/demonnic/copyWithoutNewlines/releases/latest/download/copyWithoutNewlines.mpackage\")`\n",
                     "filename": "copyWithoutNewlines.mpackage",
                     "mpackage": "copyWithoutNewlines",
                        "title": "Copy text from the main console without line breaks",
                     "uploaded": 1737769936,
                      "version": "1.0.0"
                },
                {
                       "author": "Zooka",
                      "created": "2024-10-21T13:33:38+02:00",
                  "description": "### Description\n\nCron Daemon is a script that schedules jobs (functions or actions) to be run periodically at fixed times, dates or intervals.  It can schedule down to the nearest minute and as far out as once per year.\n\nA job is a table that is passed to the cron monitor specifying when to execute a command.\n\nThe job daemon/monitor will wake up once per minute as the minute ticks over to execute any matching jobs.  It relies on your operating system time for\naccuracy.\n\nWish to see further additions to this script? Consider supporting my efforts at https://buymeacoffee.com/zookaongit\n\n### Usage\n    cron help   - to see this help\n    cron [list] - to see a list of scheduled jobs\n\n#### Time Formats\nhour (0..23)\n\nminute (0..59)\n\nday (1..31, of the month)\n\nweekday (0..6, Sunday is 0)\n\nmonth (1..12)\n\nTimes can contain ranges 1-3, enumerations 1-3,5,7 or * (every time).\n\ne.g.\n\nhour = \"*\" - match every hour\n\nday = \"1,10,20\" - match 1st, 10th, 20th of each month only\n\nweekday = \"1-3\" - match Monday, Tuesday, Wednesday only\n\nmonth = \"1,10-12\" - match January, October, November, December only\n\nJobs must contain all time entries as mentioned above.\n\nJobs must match EVERY entry before they will fire (use * for always).\n\n#### Job Commands\nThe command field is the function name to run without parenthesis.\n\nCommands are specified in two common formats;\n    command = functionName,\n    command = function() send(\"look\") end,\n\nCron functions in the first format do not accept arguments, use the second format to bring in variables for more elaborate jobs or multiple commands/functions.\n\n#### ID\nUsed to identify a particular job, typically unique.  Jobs can have the same name, but deleting one will delete only one of the jobs with the same ID.\n\n#### Job Examples\n\n    -- perform myFunction() every minute\n    local job1 = { id = \"my first job\",\n                   command = myFunction,\n                   hour = \"*\",\n                   minute = \"*\",\n                   day = \"*\",\n                   weekday = \"*\",\n                   month = \"*\"\n                 }\n    \n    -- go to work at 8:15am, but only on weekdays\n    local job2 = { id = \"off to work\",\n                   command = function()\n                        echo(\"You'll be late for work!\")\n                        disconnect()\n                   end,\n                   hour = \"8\",\n                   minute = \"15\",\n                   day = \"*\",\n                   weekday = \"1-5\",\n                   month = \"*\"\n                }\n    \n    -- Wishing you a happy birthday (at 10am, Jan 31st)\n    local job3 = { id = \"birthday\",\n                   command = function()\n                        echo(\"Happy Birthday!\")\n                   end,\n                   hour = \"10\",\n                   minute = \"0\",\n                   day = \"31\",\n                   weekday = \"*\",\n                   month = \"1\"\n                }\n    \n    -- add them to the scheduler\n    cron.add(job1)\n    cron.add(job2)\n    cron.add(job3)\n\n    -- delete them later\n    cron.delete(\"my first job\")\n    -- or alternatively\n    cron.delete(job2.id)",
                     "filename": "cron-daemon.mpackage",
                         "icon": "packages/icons/cron-daemon.png",
                     "mpackage": "cron-daemon",
                        "title": "A cron daemon/scheduler to perform tasks at fixed times, dates or intervals.",
                     "uploaded": 1729510555,
                      "version": "1"
                },
                {
                       "author": "Pato",
                      "created": "2025-01-29T00:00:00+0:00",
                  "description": "### Description\n\nDartMUDlet has many useful features to make your DartMUD experience more efficient and enjoyable.\nFeatures that include upgrades to the user interface, automation, and reporting are all included.\nIt includes a conversation window across the top as well as a character information panel in the\nbottom right next to the command line. DartMUDlet automatically counts and reports skill improves\nfor both you and your pets, and will attempt to autocorrect when a skill rolls to the next level.\n\nDartMUDlet will also block and queue up commands while you are performing interruptable actions\n(e.g. spells, books, scrolls), then release them afterwards when the action is complete.\n\n### Usage\n\nType /setup to initialize DartMUDlet once installed.\nType /help for a full list of commands.\n",
                     "filename": "dartmudlet-1.8.4.zip",
                         "icon": "packages/icons/DartMUDlet.png",
                     "mpackage": "DartMUDlet",
                        "title": "DartMUDlet has many useful features to make your DartMUD experience more efficient and enjoyable (dartmud.com:2525)",
                     "uploaded": 1738161477,
                      "version": "1.8.4"
                },
                {
                       "author": "Zooka",
                      "created": "2024-07-10T20:19:30+04:00",
                  "description": "### Description\n\nThis package gives you the ability to delay the incoming text from your game.  This gives you time to see any changes and read the text.\n\n### Usage\n\nTurn the package on or off with \n\n`> delay on`\n`> delay off`\n\nChange the delay time by going to the Script Editor (ALT+E) then Timers (CTRL+4) and adjust the stopwatch under Delay Scrolling Time.",
                     "filename": "delay-scrolling.mpackage",
                         "icon": "packages/icons/delay-scrolling.png",
                     "mpackage": "delay-scrolling",
                        "title": "Slow down the main window buffer giving you time to read.",
                     "uploaded": 1724911580,
                      "version": "1.1"
                },
                {
                       "author": "Mudlet Default Package",
                      "created": "2024-08-24T08:26:45+02:00",
                  "description": "# deleteOldProfiles Package\n\nMudlet continuiously creates backups of important data.  This can result in a lot\nof files.  This package deletes old profiles, maps and modules in the \n\"current\", \"map\" and \"moduleBackups\" folders of the Mudlet home directory that are\nno longer required.\n\nThe commands are;\n\n```\n> delete old profiles [days]\n> delete old maps [days]\n> delete old modules[days]\n```\n\nDays is optional, the default is 31 days.\n\nThe following files are NOT deleted:\n\n- Files newer than the amount of days specified, or 31 days if not specified.\n- One file for every month before that. Specifically: The first available file of every month prior to this.\n\n```\n-- Examples: \n> delete old profiles   -- deletes profiles older than 31 days  \n> delete old maps 10    -- deletes maps older than 10 days\n```\n",
                     "filename": "deleteOldProfiles.mpackage",
                         "icon": "packages/icons/deleteOldProfiles.png",
                     "mpackage": "deleteOldProfiles",
                        "title": "Remove excess backup files.",
                     "uploaded": 1724918844,
                      "version": "1"
                },
                {
                       "author": "Demonnic",
                      "created": "2022-05-16T04:25:23+0000",
                  "description": "# Highlighter\n\nThis package aims to be a game agnostic word/name highlighter. There are several different packages I've seen for this but they are all geared towards a specific game or lacked much in the way of configurability.\n\n## Quick start\n\nTo quickly see it in action, you can try the following commands from the Mudlet input line after installing the package\n\n```txt\nhl cat add enemy#bold = true\n```\n\n```txt\nhl item add enemy#Bob\n```\n\n```txt\n`echo Then to your dismay a wild Bob appeared!\n```\n\nTo clean up afterwards\n\n```txt\nhl item remove Bob\n```\n\n## Aliases\n\nAll aliases start with `hl`. Some of them get a little bit expressive, but the [API](#API) section will show you how to write your own shorter aliases. Since category names and items to be highlights both can contain spaces, I settled on using `#` as a separator for my aliases. If you need to highlight something with a `#` in it then the [API](#API) can help you out.\n\n* `hl cat list`\n  * Displays a list of the categories you have configured.\n* `hl cat add <Category#options>`\n  * this is the alias you use to add categories to the Highlighter.\n  * category is the name of the category. Can contain spaces.\n  * options is a comma separated list of options and their values.\n    * `fg = \"<127,0,0>\", bold = true`\n    * Available options\n      * fg\n        * the color to make the text. Can be specified as a color name (\"red\"), decho style (\"<255,0,0>\"), or hecho style (\"#ff0000\")\n        * defaults to false (uncolored)\n      * bg\n        * the same as fg, but the background of the text.\n        * defaults to false (uncolored)\n      * bold\n        * if true, highlight is bold. If false then highlight is unbolded if originally bold.\n        * defaults to false\n      * italics\n        * if true, item will be italicized. If false it will not be\n        * defaults to false\n      * underline\n        * if true, item will be underlined. If false it will not be\n        * defaults to false\n      * paused\n        * if true, items in this category will not actually be highlighted, but will still be tracked\n        * defaults to false\n  * Examples:\n    * `hl cat add enemy#fg = \"red\", bold = true`\n    * `hl cat add quest items#italics = true`\n* `hl item add <Category#Item>`\n  * used to add a highlight item\n  * to move an item from one category to another, simply add it to the new category\n  * both category and item may contain spaces.\n  * Examples\n    * `hl item add enemy#Bob`\n    * `hl item add quest items#a purple crystal`\n* `hl item remove <item>`\n  * used to remove an item from the highlighter\n  * an item can only belong to one category at a time, so category needn't be specified.\n* `hl cat display <category>`\n  * displays the configuration and items for the given category.\n* `hl cat remove <category>`\n  * removes a category from the highlighter, including all of its items\n  * use with caution\n* `hl cat clear <category>`\n  * removes all of the items from a category, but leaves the category and configuration in place.\n  * use with caution\n* `hl cat update <category#config>`\n  * just like `hl cat add` but updates the config of an existing category\n  * Does not **replace** the config, but updates any item included, so if it has a fg and you only pass in `bold = true` for the options then it will have both bold and the fg which was set\n  * Examples\n    * `hl cat update enemy#bold = true`\n    * `hl cat update riders of the bleeding eyeball#italics = false, bg = \"red\", fg = \"yellow\"`\n* `hl save`\n  * saves your highlighter configs and items to disk\n  * automatically done when you close the profile or uninstall the package\n* `hl load`\n  * loads your highlighter info from disk.\n  * automatically done when you load the profile or reinstall the package.\n* `hl pause <category>`\n  * pauses the specific category\n* `hl pause`\n  * pauses all categories\n* `hl unpause <category>`\n  * unpauses the specific category\n* `hl unpause`\n  * unpauses all categories\n\n## API\n\nThere are several functions you can make use of yourself for creating aliases or triggers that interact with the Highlighter.\n\n* `Highlighter:addCategory(name, options)`\n  * adds a category to the Highlighter\n  * name must be a string, can contain spaces\n  * options is a table of key/value options.\n    * Available options\n      * fg\n        * the color to make the text. Can be specified as a color name (\"red\"), decho style (\"<255,0,0>\"), or hecho style (\"#ff0000\")\n        * defaults to false (uncolored)\n      * bg\n        * the same as fg, but the background of the text.\n        * defaults to false (uncolored)\n      * bold\n        * if true, highlight is bold. If false then highlight is unbolded if originally bold.\n        * defaults to false\n      * italics\n        * if true, item will be italicized. If false it will not be\n        * defaults to false\n      * underline\n        * if true, item will be underlined. If false it will not be\n        * defaults to false\n      * paused\n        * if true, items in this category will not actually be highlighted, but will still be tracked\n        * defaults to false\n* `Highlighter:add(item, category)`\n  * adds an item to the Highlighter under category\n  * to change categories for an item, just add it using the new category.\n  * item must be a string, may contain spaces\n  * category must be a string and an existing Highlighter category\n* `Highlighter:removeCategory(name)`\n  * removes the named category from the Highlighter\n  * use with caution\n* `Highlighter:pause(name)`\n  * pauses a specific category\n* `Highlighter:pauseAll()`\n  * pauses all categories\n* `Highlighter:unpause(name)`\n  * unpauses a specific category\n* `Highlighter:unpauseAll()`\n  * unpauses all categories\n* `Highlighter:remove(item)`\n  * removes the item from the Highlighter\n  * Any given item can only be in one category, so that need not be specified\n* `Highlighter:clearCategory(name)`\n  * removes all items which belong to the named category\n  * use with caution\n* `Highlighter:clearAll(reallyReally)`\n  * removes all items from the Highlighter\n  * reallyReally must be true, to show you really mean it\n  * use with caution\n  * really really\n* `Highlighter:load(silent)`\n  * loads the configuration and items for the Highlighter from disk\n  * if silent is true, then it will not echo to the main console\n* `Highlighter:save(silent)`\n  * saves the configuration and items for the Highlighter to disk\n  * if silent is true, then it will not echo to the main console\n* `Highlighter:updateConfig(category, options)`\n  * options is a table of options for the highlighter.\n  * options are **updated** not **replaced** so any options you do not specify in the options table will remain whatever they were before the update.\n  * `Highlighter:updateConfig(\"enemy\", {fg = false, bg = \"red\", italics = true})`\n    * set text bg to red but fg unchanged from however it came in\n    * also make it italics\n    * in addition to whatever bold/underline options are already set\n* `Highlighter:updateConfig(category, option, value)`\n  * updates one specific option for category\n  * `Highlighter:updateConfig(\"friend\", \"bg\", \"purple\")` would set the bg to purple for the friend category\n* `Highlighter:chighlight(text)`\n  * returns `text` but modified for any highlights it finds. cecho format\n* `Highlighter:dhighlight(text)`\n  * returns `text` but modified for any highlights it finds. decho format\n* `Highlighter:hhighlight(text)`\n  * returns `text` but modified for any highlights it finds. hecho format\n",
                     "filename": "demonhighlighter.mpackage",
                         "icon": "packages/icons/demonhighlighter.jpg",
                     "mpackage": "demonhighlighter",
                        "title": "Configurable, game agnostic name/word/phrase highlighter",
                     "uploaded": 1737770279,
                      "version": "1.3.1"
                },
                {
                       "author": "demonnic",
                      "created": "2024-01-16T01:57:05+0000",
                  "description": "# Demonwalker\n\n## Installation\n\nSimply put `lua installPackage(\"https://github.com/demonnic/demonnicAutoWalker/releases/latest/download/demonnicAutoWalker.mpackage\")` in your Mudlet command line and it will download and install the latest version of the package from Github for you. If you already have it installed you can use the `dwalk update` alias if you have version 3.3 or higher.\n\n## What is this thing\n\nThis Mudlet package ties in to the events and functions presented by the IRE mudlet mapper script. It will walk to every room in an area, raising an event when it gets to the target room and waiting for you to raise an event telling it to move to the next room. Alternately you can pass it a table of room IDs to visit and it will visit those room IDs specifically rather than every room in an area.\n\nSo you could, for instance, use this to write a set of scripts and triggers which moved to a room, checks that room for a gemstone node and if it sees one sends \"mine gemstone\", if it does not sends the event to move on to the next unchecked room. Then the auto walker will determine which of the next unchecked rooms is closest, move to it, and tell you it has arrived in a new unchecked room.\n\nIf it can't get to a room, it just moves on to the next.\n\n## Basic Usage\n\n* `demonwalker:init()`\n  * see entry for demonwalker:init() in [Functions](#functions) for more advanced usage. Called like this it will walk each room in the current area.\n* start loop\n* listen for event \"demonwalker.arrived\"\n* do whatever you need to do in the demonwalker.arrived event handler\n* `raiseEvent(\"demonwalker.move\")`\n* repeat loop\n\n## Stop moving now, please\n\n### Via lua\n\n`raiseEvent(\"demonwalker.stop\")`\n\n### Via alias\n\n`dwalk stop`\n\n## Configuration\n\n* demonwalker.config.returnToStart\n  * when true, will go back to the room where you started the autowalker when it is done (either all rooms visited, or demonwalker.stop event received)\n* demonwalker.config.breadth\n  * When asked to find the next room to move to, it will search this many rooms away from your current room before falling back to checking the distance to all the remaining rooms and choosing the shortest one. Defaults to 10\n* demonwalker.config.avoidList\n  * list of roomIDs to avoid in **all** walks. demonwalker:addAvoidRoom(roomID) and demonwalker:removeAvoidRoom(roomID) to add/remove items from the list. This table uses roomIDs as keys, it's advised not to alter it directly. See also the dwalk alias below\n\n## Alias\n\n* `dwalk`\n  * prints out the demonwalker configuration.\n* `dwalk usage`\n  * prints out usage information for dwalk alias set\n* `dwalk report`\n  * prints out the performance report for current walk, or last one completed if you're not currently using demonwalker.\n* `dwalk explore`\n  * automatically explores an area, moving to each new room without stopping\n* `dwalk stop`\n  * stops demonwalker. Equivalent to raising the \"demonwalker.stop\" event\n* `dwalk move`\n  * Tells the walker to move on. Equivalent to raising the \"demonwalker.move\" event\n* `dwalk avoidList`\n  * prints out the global list of rooms to avoid in **all** walks\n* `dwalk avoid <roomID>`\n  * adds roomID to the global avoid list.\n* `dwalk unavoid <roomID>`\n  * removes roomID from the global avoid list.\n* `dwalk breadth <newBreadth>`\n  * Sets the number of rooms to search from your current one, before just checking all the remaining rooms for the closest. Defaults to 10, and you'll likely never need to change it.\n* `dwalk returnToStart <true/false>`\n  * Set returnToStart value. If true, will return to the room the walk started in when it's stopped/finished.\n* `dwalk debug <true/false>`\n  * Used to turn on/off debug. Will be kind of spammy if turned on, and mostly useful during development.\n* `dwalk update`\n  * Updates the package to the latest version from github.\n\n## Functions\n\n* demonwalker:addAvoidRoom(roomID)\n  * adds a room ID to the list of rooms to not include in **any** walks\n* demonwalker:removeAvoidRoom(roomID)\n  * removes a room ID from the list of rooms to not include in **any** walks\n* demonwalker:init(options)\n  * starts a walk. Options an optional table of options. Valid keys are\n    * rooms: a list of roomIDs to visit. IE {1, 2, 4, 10} . If not provided will be the list of all rooms in the area.\n    * avoidRooms: a list of roomIDs to make sure is not included in **this** walk. Not saved between walks.\n    * searchTargets: a list of items to check for. IE {\"a thief on a leaf\", \"a dracnari hunk\", \"a dracnari dreamer\"}.\n      * If this list is provided, then demonwalker will check every room for each of these items, and if any of them are found then and only then will it raise `demonwalker.arrived`. This makes it easy to automate looking for one or more creatures or items in an area, without worrying about stopping the walker yourself.\n      * If you start an entry with `\"Match:\"` then it will use string.match to check for targets/items. For instance, `\"Match:Drakt\"` will stop for anything with `Drakt` in the name at all.\n* demonwalker:performanceReport()\n  * prints out some performance information on the current walk if still running a walk, or the last walk if one has been completed.\n* demonwalker:getFailedRooms()\n  * Returns a table of roomIDs which could not be reached by demonwalker during the most recent walk.\n\n## Events\n\n### Listens for\n\n* demonwalker.move\n  * when this event is raised, if mmp is paused it will unpause it so it starts walking again. If it is not paused, then it will choose the closest unvisited room and begin walking to it.\n* demonwalker.stop\n  * when this event is raise, the current walk will end, and if demonwalker.config.returnToStart is true it will move back to the room the walk began in.\n* mmapper arrived\n  * when this event is raised, it means the speedwalk has ended and we're at the room we were moving to. demonwalker then does some housekeeping and raises `demonwalker.arrived`\n* mmapper failed path\n  * when this event is raised it means the speedwalk could not continue, so we make sure to remove the room we were moving to and then pick the next one and move to it\n\n### Raises\n\n* demonwalker.arrived\n  * raised when we have arrived at a new room, or a room which contains an item/mob we've been told to stop for. Should be listened for in order to signal that it is time to \"do the thing\", whatever that might be.\n* demonwalker.finished\n  * raised when the overall walk is finished, whether because it ran out of rooms to move to, or it was stopped using the `demonwalker.stop` event. Raised before the walk to the starting room is finished, to do something when that occurs listen for demonwalker.finished to register a one-time event handler for `mmapper arrived`\n\n## Porting\n\nIt wouldn't be too difficult to port this to other mappers, but it would need:\n\n* a function to call which starts the scripts autowalk procedure (mmp.gotoRoom in IRE mapper)\n* a variable which holds the current roomID for checking (mmp.currentroom in IRE mapper)\n* an event which is raised when an autowalk completes successfully (\"mmapper arrived\" in IRE mapper)\n* an event which is raised when an autowalk fails (\"mmapper failed path\" in IRE mapper)\n* a way to pause, unpause, and check the paused status of the walker\n* game needs to use telnet GA or EOR so that prompt triggers function\n\nThat's really it, everything else is handled by the autowalker.\n\nTODO:\n\n* Make it work with the generic mapping script that ships with Mudlet itself (will require adjustments to the generic mapping script)\n\n* Make implementing the porting items above easier by making them configuration options.\n",
                     "filename": "demonnicAutoWalker.mpackage",
                     "mpackage": "demonnicAutoWalker",
                        "title": "Helps you explore an area in any game using the same mapping script as IRE games",
                     "uploaded": 1737771359,
                      "version": "3.5"
                },
                {
                       "author": "Zooka",
                      "created": "2024-06-29T12:05:08+04:00",
                  "description": "### Description\n\nFunctions and aliases to simulate random dice rolls.\n\n### Usage\n\nThere are three aliaes, diceroll, dicemin and dicemax.  They accept dice in the following format xdy where x is the number of dice, y is the number of sides per dice.  It also allows appending an number to add (or subtract) from the dice roll.  ie. diceroll 2d6+3, or dicemin 3d5-1.  The functions can also be called directly from other scripts; dice.roll(num, sides, append), dice.min(...), dice.max(...)\n\n`> diceroll 2d6+3`\n\n    8",
                     "filename": "dice.mpackage",
                         "icon": "packages/icons/dice.png",
                     "mpackage": "dice",
                        "title": "Simulate dice rolls with these simple functions.",
                     "uploaded": 1724911580,
                      "version": "1"
                },
                {
                       "author": "Mudlet Default Package",
                      "created": "2024-08-24T08:27:19+02:00",
                  "description": "# Echo Package\n\nThe echo package provides a means of testing triggers via the command line with four command aliases;\n`` `echo, `cecho, `decho, `hecho``.  \n\nAll act as if the given text came from the game itself and will fire any matching triggers.  \n\nSee [Triggers](https://wiki.mudlet.org/w/Manual:Introduction#Triggers) for further information on matching text.\n  \n## `echo Alias\n\nDisplays text on the screen and tells all matching triggers to fire.  For coloring use one\nof the other functions mentioned below.\n\n```\n-- examples\n> `echo text - displays text on the main screen and tells all matching triggers to fire\n> `echo This is a sample line from the game$$And this is a new line.\n```\nSee [echo](https://wiki.mudlet.org/w/Manual:Lua_Functions#echo), [feedTriggers](https://wiki.mudlet.org/w/Manual:Lua_Functions#feedTriggers), \n  \n## `cecho Alias\n\nLike echo, but you can add color information using color names and ANSI values.\n\n```\n-- example: color format is <foreground:background>\n> `cecho <green:red>green on red<r> reset$$<124:100>foreground of ANSI124 and background of ANSI100<r>\n```\nSee [cecho](https://wiki.mudlet.org/w/Manual:Lua_Functions#cecho), [cfeedTriggers](https://wiki.mudlet.org/w/Manual:Lua_Functions#cfeedTriggers).\n\n## `decho Alias\n\nLike cecho, but you can add color information using <r,g,b> format.\n\n```\n-- example\n> `decho <0,128,0:128,0,0>green on red<r> reset\n```\nSee [decho](https://wiki.mudlet.org/w/Manual:Lua_Functions#decho), [dfeedTriggers](https://wiki.mudlet.org/w/Manual:Lua_Functions#dfeedTriggers).\n\n## `hecho Alias\n\nLike cecho, but you can add color information using hex #RRGGBB format.\n\n```\n-- example\n> `hecho #008000,800000green on red#r reset\n```\nSee [hecho](https://wiki.mudlet.org/w/Manual:Lua_Functions#hecho), [hfeedTriggers](https://wiki.mudlet.org/w/Manual:Lua_Functions#hfeedTriggers).\n",
                     "filename": "echo.mpackage",
                         "icon": "packages/icons/echo.png",
                     "mpackage": "echo",
                        "title": "A set of aliases to test triggers on the command line.",
                     "uploaded": 1724918844,
                      "version": "1"
                },
                {
                       "author": "Mudlet Default Package",
                      "created": "2024-08-24T08:27:33+02:00",
                  "description": "# enable-accessibility Package\n\nThis package provides two aliases for visually impaired users.\n\n```\n> mudlet access on\n> mudlet access reader\n```\n\n## mudlet access on\n\nConfigures the following settings;\n\n- clears the command line after sending the command to the game\n- does not echo the commands sent on the main screen\n- adds a shortcut to switch between input line and main window, default Ctrl+Tab\n- removes blank lines on Windows OS\n\n## mudlet access reader\n\nVoiceOver is text-to-speech (TTS) for Mac OS, but will skip reading text when there's lots of it coming on.\n\nThis command configures a third-party TTS plugin called [mudlet-reader](https://github.com/tspivey/mudlet-reader) to alleviate this issue.\n\nSee [Accessibility on OSX](https://wiki.mudlet.org/w/Accessibility_on_OSX) for more information.\n",
                     "filename": "enable-accessibility.mpackage",
                         "icon": "packages/icons/enable-accessibility.png",
                     "mpackage": "enable-accessibility",
                        "title": "Configuration for visually impaired users.",
                     "uploaded": 1724918844,
                      "version": "1"
                },
                {
                       "author": "demonnic",
                      "created": "2022-10-28T19:41:37+0000",
                  "description": "# figinator\n\n## Create ascii art out of text\n\nThe figinator is a Mudlet package designed to put the awesome power of [Figlets](http://figlet.org) right at your finger tips.\n\nExamples of all the included fonts can be font on [the Wiki](https://github.com/demonnic/figinator/wiki)\n\n## Installation\n\nThe fastest way to install the figinator is to run the following alias:\n\n`lua uninstallPackage(\"figinator\") installPackage(\"https://github.com/demonnic/figinator/releases/latest/download/figinator.mpackage\")`\n\nAfter that you can stay up to date using the `fig update` alias. (Available in 1.2+)\n\n## Usage\n\nThis is primarily meant to be used via script for your triggers and the like to present big bold text. But I've included a couple of aliases for trying it out.\n\n### Aliases\n\n* `fig fontlist`\n  * A list of the fonts included in this package and available for use\n* `fig font <fontName>`\n  * Select which figlet font to use\n* `fig demo <fontName>`\n  * Does a demo of the font in regular, kerned, and smushed.\n  * also sets future figs to be drawn in this font. It's a side effect of loading the font.\n* `fig draw <msg>`\n  * Draws `msg` in the currently selected font in the main window\n* `fig kern <msg>`\n  * Draws `msg` in the currently selected font in the main window with kerning\n* `fig smush <msg>`\n  * Draws `msg` in the currently selected font in the main window smushed\n* `fig update`\n  * downloads the latest version of the figinator and installs it.\n\n### API\n\n* `figinator.useFont(fontName)`\n  * Tells the figinator to use the specified font for the next figlet.\n* `figinator.loadOutsideFont(filename)`\n  * Allows you to load arbitrary figlet files not included with the figinator\n* `figinator.getString(msg)`\n  * Returns `msg` as a figlet in strong format, so you can echo() it where you want Puts space between the letters\n* `figinator.getKern(msg)`\n  * Like figinator.getString, but with less space between the letters\n* `figinator.getSmush(msg)`\n  * like figinator.getString, but the letters touch and share edges.\n* `figinator.demoFont(font)`\n  * Demonstrates the font in all three styles using the msg \"Fig Test\". This may take a screen to do all three.\n* `figinator.demoAll()`\n  * Demonstrates all of the fonts. This will be pretty spammy.\n* `figinator.getFancy(options)`\n  * This function does it all! Including interleaving color gradients for use with decho!\n  * options is a table of options to apply. Valid options are:\n    * msg\n      * this one is required, and is the text to make the figlet out of\n    * kern\n      * if true, will apply kerning, reducing the space between the letters\n      * defaults to false\n    * smush\n      * if true, will smush the letters closer, having them share edges where possible\n      * defaults to false\n    * gradType\n      * use either 'h' for horizontal, or 'v' for vertical. \n      * defaults to 'h'\n    * gradient\n      * the actual gradient to use. Can either be a table of gradient stops to use, or the string name of an included gradient\n      * `gradient = {{50,50,50}, {255,0,0}, {50,50,50}}`\n        * would shift from grey to red to grey\n      * `gradient = \"rainbow\"`\n        * will use the included \"rainbow\" gradient\n    * contrastColor\n      * What color to contrast the gradient with.\n      * defaults to 'black'\n      * can use named colors from cecho (such as \"black\", \"white\", \"magenta\"), decho (\"<0,0,0>\", \"<255,255,255>\"), or hecho (\"#000000\", \"#FFFFFF\")\n      * the special color \"invert\" will cause the contrast color to be the inverse of the gradient color. That is to say, if the gradient for a space has `r,g,b` of `128,255,0` then the contrast will be `127,0,255`. This is done for every space.\n    * invert\n      * When this is true then the text will be the contrastColor, and the background will be the gradient color. So if you use the rainbow gradient and the default contrastColor of \"black\" then the background colors will shift through the rainbow, and the text which makes the ascii art will be black.\n  * example:\n    * `decho(figinator.getFancy({ msg = \"Gradient1\", gradient = \"rainbow\", smush = true }))`\n      * Uses the included 'rainbow' gradient horizontally\n    * `decho(figinator.getFancy({ msg = \"Gradient2\", gradient = {{255,0,0}, {0,255,0}} }))`\n      * Will gradient from red to green horizontally\n    * `decho(figinator.getFancy({ msg = \"Gradient3\", gradType = \"v\", kern = true, gradient = {{75,0,0}, {255,0,0}} }))`\n      * Will gradient from dark red to light red, vertically.\n\n## Credit and acclaim\n\nThe figlet lua implementation is primarily the work of Nick Gammon and was taken from [his forum](https://www.gammon.com.au/forum/?id=10748&reply=6#reply6) then modified to be a lua module. And I added some convenience methods for getting strings directly instead of a table of lines.\n\nThen I took that and wrapped it in this package which includes several fonts pulled from [this git repo](https://github.com/xero/figlet-fonts) and some convenience methods for switching between the included ones easily.\n\nIn short, all the coolest parts of what this does are things other people made, I'm just trying to make them easy for Mudlet users to use =)\n",
                     "filename": "figinator.mpackage",
                     "mpackage": "figinator",
                        "title": "Create ascii art out of text",
                     "uploaded": 1737771165,
                      "version": "1.2.0"
                },
                {
                       "author": "Vadi",
                      "created": "2025-01-26T21:47:45+07:00",
                  "description": "Acts as a ctrl+f alternative/replacement, giving you what you want to find all in one place, right away.\n\n# Usage:\nDo _mfind what_ and it'll give you a list of lines where it found your text. Case-sensitive.",
                     "filename": "find-alias.mpackage",
                         "icon": "packages/icons/find-alias.jpg",
                     "mpackage": "find-alias",
                        "title": "ctrl+f alternative",
                     "uploaded": 1737944715,
                      "version": "1"
                },
                {
                       "author": "Mudlet Default Package",
                      "created": "2024-07-14T08:01:32+04:00",
                  "description": "# generic_mapper Package\n\nThis script allows for semi-automatic mapping using the included triggers.\nWhile different games can have dramatically different ways of displaying\ninformation, some effort has been put into giving the script a wide range of\npotential patterns to look for, so that it can work with minimal effort in\nmany cases.\n\ngeneric_mapper looks at a combination of room titles, descriptions and exits\nto locate and follow your character around maps you can make yourself, share\nand download for your MUD.\n\nTwo commands to get started are;\n```\n> map basics\n> map help\n```\n\nSee [this forum thread](https://forums.mudlet.org/viewtopic.php?f=13&t=6105) for further assistance.\n\nSee [this forum thread](https://forums.mudlet.org/search.php?keywords=mapping+script&terms=all&author=&sc=1&sf=titleonly&sr=topics&sk=t&sd=d&st=0&ch=400&t=0&submit=Search&pk_vid=08fcc4383ef3530916874145245184da) for more mapping scripts.\n",
                     "filename": "generic_mapper.mpackage",
                         "icon": "packages/icons/generic_mapper.png",
                     "mpackage": "generic_mapper",
                        "title": "Semi-automatic mapping, designed to work with many MUDs.",
                     "uploaded": 1724918844,
                      "version": "2.1.4"
                },
                {
                       "author": "Demonnic",
                      "created": "2022-01-11T03:23:22+0000",
                  "description": "# GREP\n\nThis alias (and the functions which support it) tries to emulate the `grep` command from *NIX systems, in that it will search your buffer for all the lines which match a pattern and display them on the screen for you.\n\nIt will autodetect how many lines can fit on your main window and paginate the results for you accordingly. This was created after someone asked me if Mudlet could do something like TinTin++'s [grep](https://tintin.mudhalla.net/manual/grep.php) command in the #help channel on the Mudlet discord. It seemed like a good idea, so I threw something together.\n\n## Things to keep in mind\n\nThe output of the `grep` alias adds to the buffer, so future uses of grep (including changing pages) will include the already printed pages at the end. This means for browsing the end of the output you should really use `-1` for the page to print from the get go, IE `grep Bob -1` to show the most recent page of lines with Bob on.\n\n## The future?\n\nI think it might be a slightly cleaner experience to have the alias assemble the output, and then display it in a Miniconsole with the wrapping turned off and the horizontal scroll bar turned on. This way the output you're paging through isn't changing because you're paging through it. But I wanted to go ahead and get this out the door.\n\n## Alias\n\n* `grep <regex pattern to search for> <optional page of the results to display>`\n  * This alias will search the main console buffer for all lines which match the pattern provided. It reads the buffer after it has been word wrapped, which means that it evaluates each line as it appears separately, rather than how it came in from the game originally.\n  * examples:\n    * `grep \\d+ gold coins`\n      * searches the buffer for any line with a number of gold coins on it and prints the outcome.\n    * `grep (?i)goblin 2`\n      * searches the buffer for goblin, ignoring case sensitivity (will match goblin or GoBLin), and print page 2 if there's more than 1 page.\n\n## Functions\n\nI use the `[=[things and stuff]=]` alternate method of string delineation for two reasons\n\n* Using `\"things and stuff\"` means you have to escape every `\\` in your regex\n* This text is included in the package's config.lua, which uses the form without the `=` sign between the brackets, and if I use that it breaks the package.\n\n### `GREP.getLines([win,]pattern)`\n\n  `pattern` is the regular expression you want to search the main buffer for\n  \n  returns a table with all of the matching lines in it, one entry per line\n  \n```lua\n  GREP.getLines([=[\\d+ gold coins]=])\n```\n\nreturns\n\n```txt\n{\n  \"There are 32 gold coins on the floor here\",\n  \"There are 72 gold coins on the floor here\",\n  \"The table has 1928 gold coins upon it\",\n}\n```\n\n### `GREP.grep(pattern, pg)`\n\nPrints out the lines matching the `pattern` to the main window, starting at `pg`. If `pg` is left off, then it defaults to 1. see getPage above for more on the page numbering.\n\n```lua\nGREP.grep([=[\\d+ gold coins]=])\n```\n\n```txt\n(grep): total hits: 5   Pg:1/1\n`echo There are 32 gold coins on the floor here\nThere are 32 gold coins on the floor here\n`echo There are 72 gold coins on the floor here\nThere are 72 gold coins on the floor here\n`echo The table has 1928 gold coins upon it\n(grep):No more pages\n```\n",
                     "filename": "grep.mpackage",
                         "icon": "packages/icons/grep.png",
                     "mpackage": "grep",
                        "title": "A utility for searching your buffers.",
                     "uploaded": 1737771148,
                      "version": "1.0.0"
                },
                {
                       "author": "Mudlet Default Package",
                      "created": "2024-12-13T13:16:38+04:00",
                  "description": "Allow a user to drag and drop an image on the main screen which will turn it into a label and AdjustableContainer.\n\n### Description\n\nThis packages allows a user to drag and drop an image on the main screen which will turn it into a label and AdjustableContainer.\nThe resultant script can be found in GUIDropManager which can then be tailored further as per normal scripting rules.  The images\nare copied to %user-profile/GUIDropImages/\n\n### Usage\n\nJust drop an image file into the main window.  It will be converted into a label inside an AdjustableContainer.\n",
                     "filename": "gui-drop.mpackage",
                     "mpackage": "gui-drop",
                        "title": "Drag and drop images onto the main window to turn into a label and container.",
                     "uploaded": 1734332722,
                      "version": "1"
                },
                {
                       "author": "Zooka",
                      "created": "2024-09-01T16:21:44+02:00",
                  "description": "### Description\n\nMaster Spam suppress lines of text for a specified number of times, allowing one to get through every now and then.\n\n### Usage\n\nInsert the lines you want to match into the masterSpam.masterSpam table, and add the number of lines you want to suppress.\n\n### See Also\n\nI make Mudlet scripts for a living.  Please support my work if you have found this package helpful!\n\n* https://buymeacoffee.com/zookaongit\n* https://github.com/ZookaOnGit\n",
                     "filename": "master-spam.mpackage",
                         "icon": "packages/icons/master-spam.png",
                     "mpackage": "master-spam",
                        "title": "Suppress lines of spamminess.",
                     "uploaded": 1725200902,
                      "version": "1"
                },
                {
                       "author": "Mudlet Default Package",
                      "created": "2025-01-25T12:53:45+0000",
                  "description": "### Description\nmpkg is a command line interface for managing packages used in Mudlet. You can install, remove, search the repository and update packages using this interface.\n\n### Usage\n\n```\nCommands:\n  mpkg install          -- install a new package\n  mpkg list             -- list all installed packages  \n  mpkg remove           -- remove an existing package\n  mpkg search           -- search for a package via name and description\n  mpkg show             -- show detailed information about a package\n  mpkg update           -- update your package listing\n```\n### See Also\n\n* https://packages.mudlet.org\n",
                     "filename": "mpkg.mpackage",
                         "icon": "packages/icons/mpkg.png",
                     "mpackage": "mpkg",
                        "title": "A command line package manager for Mudlet.",
                     "uploaded": 1737809627,
                      "version": "3.3"
                },
                {
                       "author": "Armagedoom",
                      "created": "2025-01-26T20:42:59+01:00",
                  "description": "Helper to transform MUSH plugins or xml code into a Mudlet package.\n\nThe steps to transform your MUSH code to a Mudlet package are:\n\n\n* Paste the full code of your mush plugin or xml code block as value for the variable `mush_to_mudlet_code_to_transform` inside the script `INSERT_YOUR_CODE_HERE`.\n* Click on the script `DO_TRANSFORM/PACKAGE_TO_CLIPBOARD`. \n* Paste your new mudlet plugin, which will create a folder in Alias, Scripts, and triggers with the code converted from Mush.\n\nThe scripts will need manual work, but most of the alias and triggers will be automatically converted.",
                     "filename": "mush_to_mudlet.mpackage",
                     "mpackage": "mush_to_mudlet",
                        "title": "Helper to transform MUSH plugins or xml code into a Mudlet package",
                     "uploaded": 1737944692,
                      "version": "1.1"
                },
                {
                       "author": "Vadi",
                      "created": "2025-01-28T19:05:36+07:00",
                  "description": "Would you like to save the paragraph you've written to do something quickly? Now you can.\n\nDrag and drop this script into Mudlet, then hit __Ctrl+Page Up__ to save and __Ctrl+Page Down__ to load.",
                     "filename": "roleplaything.mpackage",
                         "icon": "packages/icons/roleplaything.jpg",
                     "mpackage": "roleplaything",
                        "title": "Roleplay Thing (save/load text)",
                     "uploaded": 1738066155,
                      "version": "1"
                },
                {
                       "author": "Mudlet Default Package",
                      "created": "2024-08-27T05:32:00+02:00",
                  "description": "# run-lua-code\n\nA simple package that provides a `lua` alias that allows the user to\nrun Lua code from the command line.\n\n```\n-- examples\n> lua echo(\"Lua from the command line\")  -- runs the Lua echo function displaying text on the main screen\n> lua send(\"look\")                       -- send the command 'look' to the game server\n> lua showColors()                       -- display a color palette\n```\n",
                     "filename": "run-lua-code.mpackage",
                         "icon": "packages/icons/run-lua-code.png",
                     "mpackage": "run-lua-code",
                        "title": "Run Lua code directly from the command line.",
                     "uploaded": 1737298564,
                      "version": "5"
                },
                {
                       "author": "Xanthia",
                      "created": "2024-08-29T13:17:18+08:00",
                  "description": "Easily play default sounds with a single command or lua code function.  List of 100 sounds currently available.",
                     "filename": "shaxamm.mpackage",
                         "icon": "packages/icons/shaxamm.jpg",
                     "mpackage": "shaxamm",
                        "title": "Xanthia's Audio Manager Module",
                     "uploaded": 1724924182,
                      "version": "1.0"
                },
                {
                       "author": "Zooka",
                      "created": "2024-11-26T15:02:05+04:00",
                  "description": "### Description\n\nCreate a simple map using only directional commands.\nSupports n,s,e,w,ne,nw,se,sw,u,d.  This mapper does\nnot capture any game data so can also be used offline\nfor creating areas.\n\n### Usage\nType smap help for the help file.\n\nTo get started on a new map issue the following command: <yellow>smap new area My Area<reset> and starting moving around.\n```\n",
                     "filename": "simple-mapper.mpackage",
                         "icon": "packages/icons/simple-mapper.png",
                     "mpackage": "simple-mapper",
                        "title": "Create simple maps using directional commands only.",
                     "uploaded": 1732619400,
                      "version": "2.1"
                },
                {
                       "author": "demonnic (mods by Zooka)",
                      "created": "2024-06-30T16:47:33+04:00",
                  "description": "### Description\n\nRecords a speedwalk with the ability to play back, and in reverse. Makes use of the speedwalk() function.\n\n### Usage\n```\nspeedrecord <name of speedwalk route>\n```\nThis begins the recording. When you do this, it activates an alias which consumes everything you put in the command line and adds it to the route it is recording. When done, type:\n```\nstopRecording\n```\nand it will end the recording mode and add the route to the list of routes it knows. To walk the route:\n```\nswalk <name of speedwalk route>\n```\nAnd if you want to walk it in reverse:\n```\nrwalk <name of speedwalk route to reverse>\n```\nTo see a list of saved speedwalks with clickable links;\n```\nlwalk\n```\nTo set the speedwalk delay type:\n```\ndelaywalk <number>\n```\nTo remove a speedwalk;\n```\nremovewalk <name of speedwalk route>\n```",
                     "filename": "speedWalkRecorder.mpackage",
                         "icon": "packages/icons/speedWalkRecorder.png",
                     "mpackage": "speedWalkRecorder",
                        "title": "Records a speedwalk with the ability to play back, and in reverse.",
                     "uploaded": 1724911580,
                      "version": "2.3"
                }
              ],
   "updated": "Fri Jan 31 17:47:01 2025"
}